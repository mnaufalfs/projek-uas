name: Deploy HTML App to Docker Hub and EC2

on:
  push:
    branches:
      - main # Ganti dengan branch utama Saya jika berbeda (misalnya, master)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/projek-uas:latest # Ganti your-html-app dengan nama image Saya
            
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/projek-uas:latest

            echo "Stopping existing container (if any)..."
            docker stop projek-uas || true
            docker rm projek-uas || true

            echo "Running new container..."
            docker run -d --name projek-uas -p 9080:80 ${{ secrets.DOCKERHUB_USERNAME }}/projek-uas:latest

            echo "Deployment complete!"

      - name: Set up SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy file menggunakan rsync
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST_FILE }}
          TARGET_DIR: /var/www/html/
        run: |
            sudo su
            rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \--exclude '.git/' \
            ./ \ 
            ${EC2_USER}@${EC2_HOST}:${TARGET_DIR}

      - name: Restart Web Server (Opsional)
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST_FILE }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "sudo systemctl reload nginx"